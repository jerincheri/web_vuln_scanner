import requests
from bs4 import BeautifulSoup
from urllib.parse import urljoin
from colorama import init, Fore, Style

init(autoreset=True)

# Payloads
sql_payloads = ["' OR '1'='1", "'--"]
xss_payloads = ['<script>alert(1)</script>']

# Banner
def show_banner():
    print(f"{Fore.CYAN}{Style.BRIGHT}")
    print("╔═══════════════════════════════════════╗")
    print("║           VulnScanner v1.0           ║")
    print("║   Simple Web Vulnerability Scanner   ║")
    print("╚═══════════════════════════════════════╝")
    print(f"{Style.RESET_ALL}")

# Get all forms on the page
def get_forms(url):
    try:
        html = requests.get(url, timeout=5).text
        soup = BeautifulSoup(html, "html.parser")
        return soup.find_all("form")
    except requests.RequestException:
        print(f"{Fore.RED}[!] Failed to retrieve forms from {url}")
        return []

# Submit a form with a test payload
def submit_form(form, url, payload):
    action = form.get("action")
    method = form.get("method", "get").lower()
    inputs = form.find_all("input")

    form_url = urljoin(url, action)
    data = {}

    for input_tag in inputs:
        name = input_tag.get("name")
        if name:
            data[name] = payload

    try:
        if method == "post":
            return requests.post(form_url, data=data, timeout=5)
        else:
            return requests.get(form_url, params=data, timeout=5)
    except:
        return None

# Scan for XSS
def scan_xss(url):
    print(f"{Fore.YELLOW}[*] Scanning for XSS...")
    forms = get_forms(url)
    for form in forms:
        for payload in xss_payloads:
            res = submit_form(form, url, payload)
            if res and payload in res.text:
                print(f"{Fore.GREEN}[✔] XSS vulnerability found at {url}")
                return True
    print(f"{Fore.CYAN}[–] No XSS found.")
    return False

# Scan for SQL Injection
def scan_sql(url):
    print(f"{Fore.YELLOW}[*] Scanning for SQL Injection...")
    forms = get_forms(url)
    for form in forms:
        for payload in sql_payloads:
            res = submit_form(form, url, payload)
            if res:
                errors = ["sql syntax", "mysql", "unclosed quotation", "sqlite", "syntax error"]
                if any(err in res.text.lower() for err in errors):
                    print(f"{Fore.GREEN}[✔] SQL Injection vulnerability found at {url}")
                    return True
    print(f"{Fore.CYAN}[–] No SQL Injection found.")
    return False

# Main
if __name__ == "__main__":
    show_banner()
    target = input(f"{Fore.BLUE}[?] Enter target URL (e.g. http://example.com): ").strip()
    
    if not target.startswith("http"):
        print(f"{Fore.RED}[!] Invalid URL. Please include http:// or https://")
    else:
        print(f"{Fore.MAGENTA}\n[!] Scanning {target}...\n")
        scan_xss(target)
        scan_sql(target)
